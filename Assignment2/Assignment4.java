IF ANY CLASS HAS METHOD AS ABSTRACT THEN THAT CLASS MUST BE DECLARED ABSTRACT 
ANS : YES , IF WE DOESNT MAKE THE CLASS AS ABSTRACT IT WILL GIVE ERROR .
WE SHOULD MAKE THE METHOD AND CLASS AS ABSTRACT LIKE THIS
package ass2.ques4;

public abstract class Abstracts {
    public abstract void print();
    {

    }
}

2.ABSTRACT CLASS CANNOT BE INSTANTIATED
ANS :YES, BECAUSE IN ABSTARCT CLASS WE MIGHT HAVE ONLY ABSTRACT METHOD,WHEN WE HAVE
ABSTRACT METHOD THERE IS NO POINT OF INSTANTIATING THE CLASS AS THERE IS NOTHING TO 
ACCESS

if we try to instantiate the abstract class
it will give error like this
java: ass2.ques4.Abstracts is abstract; cannot be instantiated

3.WHEN WE EXTEND THE ABSTRACT WE NEED TO PROVIDE IMPLEMENATATION USING OVERIDING OTHERWISE
DECALRE THE SUBCLASS ALSO ABSTRACT
ANS:
IF WE DONT PROVIDE IMPLENMENATTION IT WILL GIVE ERROR LIKE THIS
java: ass2.ques4.AbstractMain is not abstract and does not override abstract method print() 

TO OVERCOME THIS WE NEED TO PROVIDE IMPLEMENTATION IN SUBCLASS LIKE THIS
package ass2.ques4;

public class AbstractMain extends Abstracts
{
    public static void main(String[] args) {
    @Override
TESTING ABSTRACT CLASS anD ABSTRACT METHOD PRINCIPLE

1.IF ANY CLASS HAS METHOD AS ABSTRACT THEN THAT CLASS MUST BE DECLARED ABSTRACT 
ANS : YES , IF WE DOESNT MAKE THE CLASS AS ABSTRACT IT WILL GIVE ERROR .
WE SHOULD MAKE THE METHOD AND CLASS AS ABSTRACT LIKE THIS
package ass2.ques4;

public abstract class Abstracts {
    public abstract void print();
    {

    }
}

2.ABSTRACT CLASS CANNOT BE INSTANTIATED
ANS :YES, BECAUSE IN ABSTARCT CLASS WE MIGHT HAVE ONLY ABSTRACT METHOD,WHEN WE HAVE
ABSTRACT METHOD THERE IS NO POINT OF INSTANTIATING THE CLASS AS THERE IS NOTHING TO 
ACCESS

if we try to instantiate the abstract class
it will give error like this
java: ass2.ques4.Abstracts is abstract; cannot be instantiated

3.WHEN WE EXTEND THE ABSTRACT WE NEED TO PROVIDE IMPLEMENATATION USING OVERIDING OTHERWISE
DECALRE THE SUBCLASS ALSO ABSTRACT
ANS:
IF WE DONT PROVIDE IMPLENMENATTION IT WILL GIVE ERROR LIKE THIS
java: ass2.ques4.AbstractMain is not abstract and does not override abstract method print() 

TO OVERCOME THIS WE NEED TO PROVIDE IMPLEMENTATION IN SUBCLASS LIKE THIS
package ass2.ques4;

public class AbstractMain extends Abstracts
{
    public static void main(String[] args) {
    @Override
    public void print() {
	System.out.println("Implenting a abstract method by overriding");
    }
}
}

4.ABSTRACT CLASS CANNOT BE PRIVATE
ANS: YES, BECAUSE WE CANNOT ACCESS THEM IN ANY SUBCLASS AND CANT PROVIDE IMPLEAMNETATION TO THAT 
ABSTRACT CLASS

5.ABSTRACT CLASS CANNOT BE FINAL
ANS: YES, BECAUSE WE CAN ACCESS THEM IN ANY SUBCLASS BUT CAN'T PROVIDE IMPLEAMNETATION TO THAT 
ABSTRACT CLASS OR CAN'T BE OVERRIDDEN.

6.WE CAN DECLARE THE CLASS AS ABSTRACT WITHOUT HAVING ABSTRACT METHOD
ANS:YES,BUT IF WE DO THAT WE CAN'T INSTATNTIATE THAT CLASS.
    public void print() {
	System.out.println("Implenting a abstract method by overriding");
    }
}
}

4.ABSTRACT CLASS CANNOT BE PRIVATE
ANS: YES, BECAUSE WE CANNOT ACCESS THEM IN ANY SUBCLASS AND CANT PROVIDE IMPLEAMNETATION TO THAT 
ABSTRACT CLASS

5.ABSTRACT CLASS CANNOT BE FINAL
ANS: YES, BECAUSE WE CAN ACCESS THEM IN ANY SUBCLASS BUT CAN'T PROVIDE IMPLEAMNETATION TO THAT 
ABSTRACT CLASS OR CAN'T BE OVERRIDDEN.

6.WE CAN DECLARE THE CLASS AS ABSTRACT WITHOUT HAVING ABSTRACT METHOD
ANS:YES,BUT IF WE DO THAT WE CAN'T INSTATNTIATE THAT CLASS.
